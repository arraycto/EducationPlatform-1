server:
  #项目端口号
  port: 8066
  servlet:
    context-path: /Jmccms

eureka:
  instance:
    # 每隔10s发送一次心跳
    lease-renewal-interval-in-seconds: 10
    # 告知服务端30秒还未收到心跳的话，就将该服务移除列表
    lease-expiration-duration-in-seconds: 30
  client:
    serviceUrl:
      #eureka注册中心地址固定就这样写
      defaultZone: http://localhost:8888/eureka/

logging:
  pattern:
    console: "%d - %msg%n"
  #path: D:\Logback-Test\             #日志输出到指定文件夹下默认名为spring.log
  file: D:\Logback-Test\wordimg.log  #日志输出到指定文件
  #level: debug   #指定级别
  level:         #指定输出某个类的日志
    com.cnooc.wordimg.LoggerTest2: debug

spring:
  application:
    #服务名称,写组长名称谢谢!!!
    name: serve-jmccms
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    #数据库意思是:机构权限文件
    url: jdbc:mysql://127.0.0.1:3306/jmccms?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: root
    dbcp2:                                          # 进行数据库连接池的配置
      min-idle: 5                                   # 数据库连接池的最小维持连接数
      initial-size: 5                               # 初始化提供的连接数
      max-total: 5                                  # 最大的连接数
      max-wait-millis: 200                          # 等待连接获取的最大超时时间
    # SpringDateJpa 配置自动建表：updata:没有表新建，有表更新操作,控制台显示建表语句
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect  #不加这句则默认为myisam引擎
    ##运行时输出jpa执行的sql语句
    show-sql: true
    ## spring-boot-starter-data-jpa自动映射创建表动作 配置: 有表更新,无表创建
    hibernate:
      ddl-auto: update
  #集中解决各种编码问题
  banner:
    charset: UTF-8
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  messages:
    encoding: UTF-8
  #     spring mvc 视图解析器
  mvc:
    view:
      prefix: /
      suffix: .html
  # 时间格式化
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    # 时区设置
    time-zone: GMT+8

# security:
    # oauth2:
    # resource:
    #   ####从认证授权中心上验证token
    #  tokenInfoUri: http://localhost:3011/chenyongjia-oauth/oauth/check_token
    #  preferTokenInfo: true
    # client:
    #  accessTokenUri: http://localhost:3011/chenyongjia-oauth/oauth/token
    #  userAuthorizationUri: http://localhost:3011/chenyongjia-oauth/oauth/authorize
    #  client-id: client_1
  # client-secret: 123456

